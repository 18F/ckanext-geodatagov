---
- hosts: dev
  user: root
  tasks:
    - name: install epel
      action: command creates=/etc/yum.repos.d/epel.repo rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm
    - name: make sure packages are installed
      action: yum pkg={{item}} state=installed
      with_items:
        - htop
        - atool
        - rubygems
        - python-virtualenv
        - python-setuptools
        - git
        - python-devel
        - ruby-devel
        - postgresql-libs
        - postgresql-devel
        - libxml2-devel
        - libxslt-devel
        - postgresql
        - rpmdevtools
        - gcc
        - gcc-c++
        - make
        - bison
        - httpd
        - createrepo
        - mod_wsgi
        - java-openjdk
        - tomcat6
        - cronie
        - libselinux-python
        - wget
        - vim
        - python-psycopg2

#SOLR setup
#     - name: Download solr 4.2.1
#       get_url: url="http://archive.apache.org/dist/lucene/solr/4.2.1/solr-4.2.1.tgz" dest="/tmp/"
# 
#     - name: Unpack solr
#       shell: "cd /tmp/ && tar -zxvf solr-4.2.1.tgz"
# 
#     - name: Deploy solr war
#       shell: "mv /tmp/solr-4.2.1/dist/solr-4.2.1.war /var/lib/tomcat6/webapps/solr.war && rm -rf /tmp/solr-4.2.1"
# 
# #     - name: Download solr 4.2.1
# #       get_url: url="https://raw.github.com/okfn/ckanext-geodatagov/dev/solr/schema.xml" dest="/tmp/"
# 
#     - name: register tomcat service
#       shell: "chkconfig tomcat6 on"
# 
#     - name: restart tomcat
#       action: service name=tomcat6 state=restarted

    
#POSTGRESQL setup

#     - name: make sure postgresql packages are installed
#       action: yum pkg={{item}} state=installed
#       with_items:
#         - postgresql-server
#         - postgis
#  
#     - name: register postgresql service
#       shell: "chkconfig postgresql on"
# 
#     - name: create cluster
#       action: command creates=/var/lib/pgsql/data/postgresql.conf service postgresql initdb
# 
#     - name: setup pg_hba.conf
#       lineinfile: dest=/var/lib/pgsql/data/pg_hba.conf regexp=^local.* line='local   all         all                               trust'
# 
#     - name: restart postgres
#       action: service name=postgresql state=restarted
# 
#     - name: create db user
#       action: postgresql_user user=geo password=ckan role_attr_flags=SUPERUSER
# 
#     - name: create db
#       action: postgresql_db  name=ckan owner=geo
# 
#     - name: create pgsql lang
#       shell: "createlang plpgsql ckan"
#       sudo: yes
#       sudo_user: postgres
# 
#     - name: install postgis script
#       shell: "psql -d ckan -f /usr/share/pgsql/contrib/postgis-64.sql"
#       sudo: yes
#       sudo_user: postgres
# 
#     - name: install postgis ref_sys script
#       shell: "psql -d ckan -f /usr/share/pgsql/contrib/spatial_ref_sys.sql"
#       sudo: yes
#       sudo_user: postgres

#CKAN setup
    - name: remove old code
      action: file path=/usr/lib/ckan/src state=absent

    - name: get ckan version
      action: git repo=https://github.com/okfn/ckan.git dest=/usr/lib/ckan/src/ckan version=dea7c1264677202f6b3effda49eb8fba358b2ec0

    - name: get pip
      action: easy_install name=https://pypi.python.org/packages/source/p/pip/pip-1.3.1.tar.gz

    - name: install requirements and make virtualenv
      action: pip requirements=/usr/lib/ckan/src/ckan/pip-requirements.txt virtualenv=/usr/lib/ckan/ virtualenv_site_packages=yes

    - name: run setup.py develop for ckan
      action: command chdir=/usr/lib/ckan/src/ckan/ ../../bin/python setup.py develop

    - name: make sure pip is 1.3.1
      action: command chdir=/usr/lib/ckan/src/ckan/ ../../bin/easy_install https://pypi.python.org/packages/source/p/pip/pip-1.3.1.tar.gz

    - name: get geodatagov
      action: git repo=https://github.com/okfn/ckanext-geodatagov dest=/usr/lib/ckan/src/ckanext-geodatagov version=dev

    - name: install requirements for geodatagov
      action: pip requirements=/usr/lib/ckan/src/ckanext-geodatagov/pip-requirements.txt virtualenv=/usr/lib/ckan/

    - name: run setup.py develop for geodatagov
      action: command chdir=/usr/lib/ckan/src/ckanext-geodatagov/ ../../bin/python setup.py develop

    - name: install requirements for harvest
      action: pip requirements=/usr/lib/ckan/src/ckanext-harvest/pip-requirements.txt virtualenv=/usr/lib/ckan/

    - name: install requirements for spatial
      action: pip requirements=/usr/lib/ckan/src/ckanext-spatial/pip-requirements.txt virtualenv=/usr/lib/ckan/

    - name: get datajson extension
      action: git repo=https://github.com/FuhuXia/ckanext-datajson dest=/usr/lib/ckan/src/ckanext-datajson version=dev

    - name: install requirements for datajson
      action: pip requirements=/usr/lib/ckan/src/ckanext-datajson/pip-requirements.txt virtualenv=/usr/lib/ckan/

    - name: run setup.py develop for datajson
      action: command chdir=/usr/lib/ckan/src/ckanext-datajson/ ../../bin/python setup.py develop

    - name: remove psycopg2
      action: pip name=psycopg2 virtualenv=/usr/lib/ckan/ state=absent

    - name: install supervisor
      action: pip name=supervisor virtualenv=/usr/lib/ckan/

    - name: remove old repo
      action: file path=/var/www/ckan-repo/master state=absent

    - name: create directories
      action: file path={{item}} state=directory
      with_items:
        - /etc/ckan
        - /var/www/ckan-repo/master

    - name: default apache removed
      action: file path=/etc/httpd/conf.d/welcome.conf state=absent

    - name: copy all needed files
      action: copy src={{item}} dest=/{{item}}
      with_items:
        - etc/ckan/who.ini
        - etc/ckan/apache.wsgi
        - etc/ckan/production.ini
        - etc/supervisord.conf
        - etc/httpd/conf.d/ckan.conf
        - etc/cron.d/ckan-harvest
        - etc/cron.daily/remove_old_sessions
        - etc/init/supervisor.conf
        - var/lib/tomcat6/webapps/fgdc2iso.war

    - name: copy executables
      action: copy src={{item}} dest=/{{item}} mode=744
      with_items:
        - usr/bin/ckan
        - tmp/after_web.sh
        - tmp/after_harvester.sh

    - name: create superviserctl symlink
      action: file src=/usr/lib/ckan/bin/supervisorctl dest=/usr/bin/supervisorctl state=link

    - name: horrible hacks to get libxml to work
      action: command sed -i 's/gml:doubleList/string/g' /usr/lib/ckan/src/ckanext-spatial/ckanext/spatial/validation/xml/iso19139ngdc/schema/gml/geometryBasic0d1d.xsd

    - name: horrible hacks to get libxml to work
      action: command sed -i 's/gml:doubleList/string/g' /usr/lib/ckan/src/ckanext-spatial/ckanext/spatial/validation/xml/iso19139ngdc/schema/gml/basicTypes.xsd

    - name: horrible hacks to get libxml to work
      action: command  sed -i 's/gml:NameOrNilReasonList/string/g' /usr/lib/ckan/src/ckanext-spatial/ckanext/spatial/validation/xml/iso19139ngdc/schema/gml/basicTypes.xsd

    - name: horrible hacks to get libxml to work
      action: command sed -i 's/gml:doubleOrNilReasonList/string/g' /usr/lib/ckan/src/ckanext-spatial/ckanext/spatial/validation/xml/iso19139ngdc/schema/gml/basicTypes.xsd 

    - name: restart apache
      action: service name=httpd state=restarted

    - name: packages for web part are installed
      action: yum pkg={{item}} state=installed
      with_items:
        - memcached
        - postgresql
        - httpd
        - mod_wsgi
        - geos
        - cronie
        - python-psycopg2
        - xmlsec1
        - xmlsec1-openssl
        - swig
        - m2crypto

    - name: after web installation script
      action: command /tmp/after_web.sh

    - name: packages for harvester part
      action: yum pkg={{item}} state=installed
      with_items:
        - redis
        - postgresql
        - geos
        - tomcat6
        - geos
        - cronie
        - python-psycopg2
        - xmlsec1
        - xmlsec1-openssl
        - swig
        - m2crypto
        - java-openjdk
        - libxslt
        - libxml2

    - name: after web installation script
      action: command /tmp/after_harvester.sh

